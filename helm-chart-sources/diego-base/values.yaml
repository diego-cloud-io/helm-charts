# Default values for diego-base.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

# The customer domain, e.g. acme.com. Diego componets will be installed using
# the pattern {component}.diego.{domain}, e.g. argocd.diego.acme.com
domain: 

# See https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#repositories
# Each item in the list is used to generate a private repository using the Github App specified
# with values under key "github" in this file
repositories:
  - diego-tooling
  - diego-default-project

argo-cd:
  server:
    ingressGrpc:
      enabled: true
      isAWSALB: true
      awsALB:
        serviceType: ClusterIP
    ingress:
      enabled: true
      annotations: 
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
        alb.ingress.kubernetes.io/backend-protocol: HTTPS
        alb.ingress.kubernetes.io/target-type: ip
      ingressClassName: alb

      hosts:
      #- required, argocd.diego.{{{ DOMAIN }}}
      tls: 
      - hosts:
        #- required, argocd.diego.{{{ DOMAIN }}}
    extensions:
      # -- Enable support for Argo UI extensions
      enabled: false

      ## Argo UI extensions image
      image:
        # -- Repository to use for extensions image
        repository: "ghcr.io/argoproj-labs/argocd-extensions"
        # -- Tag to use for extensions image
        tag: "v0.2.1"
        # -- Image pull policy for extensions
        # @default -- `""` (defaults to global.image.imagePullPolicy)
        imagePullPolicy: ""

      # -- Server UI extensions container-level security context
      # @default -- See [values.yaml]
      containerSecurityContext:
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
          - ALL

      # -- Resource limits and requests for the argocd-extensions container
      resources: {}
      #  limits:
      #    cpu: 50m
      #    memory: 128Mi
      #  requests:
      #    cpu: 10m
      #    memory: 64Mi
  configs:
    cm:          
      url: # required, https://argocd.diego.{{{ DOMAIN }}}
      oidc.config: |
          name: Dex          
          issuer: # required, https://argocd.diego.{{{ DOMAIN }}}
          clientID: argocd
          clientSecret: argocd-oauth:client_secret
          requestedScopes: ["openid", "profile", "email", "groups"]
          requestedIDTokenClaims: {"groups": {"essential": true}}
      resource.customizations.health.infra.diegocloud.io_Component: |
        hs = {}
        hs.status = "Progressing" 
        if obj.status ~= nil then
          if obj.status.hasErrors == true then
            hs.status = "Degraded"
            hs.message = "Errors during reconciliation"
          elseif obj.status.hasChanges == false then
            hs.status = "Healthy"
            hs.message = "Up-to-date"
          else
            hs.status = "Progressing" 
            hs.message = "Pending approval"
          end
        end
        return hs
      resource.customizations.actions.infra.diegocloud.io_Component: |
        discovery.lua: |
          actions = {}
          actions["approve"] = {["disabled"] = true}
          if obj.status.hasChanges and obj.metadata.annotations["infra.diegocloud.io/last-approval"] ~= obj.status.requiredApproval then
              actions["approve"]["disabled"] = false
          end
          return actions
        definitions:
        - name: approve
          action.lua: |
            obj.metadata.annotations["infra.diegocloud.io/last-approval"] = obj.status.requiredApproval
            return obj
    rbac:
      policy.default: role:admin
    secret: 
      ## Argo expects the password in the secret to be bcrypt hashed. You can create this hash with
      ## `htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/'`      
      argocdServerAdminPassword: # required
  dex:
    enabled: false # don't install dex bundled with argo
dex:
  clientId: # required
  clientSecret: # required

github:
  orgName: # required
  repoName: diego-default-project
  appInstallId: # required
  appId: # required
  appPemKey: |
    -----BEGIN RSA PRIVATE KEY-----
    # required
    -----END RSA PRIVATE KEY-----